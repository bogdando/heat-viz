description: 'Nova API,Keystone,Heat Engine and API,Glance,Neutron,Dedicated MySQL
  server,Dedicated RabbitMQ Server,Group of Nova Computes,Common Block Storage Configuration,swift-source.yaml,Common
  Swift Storage Configuration,ssl-source: SSL endpoint metadata for openstack,Swift-proxy:
  OpenStack object storage proxy,nova-compute-config.yaml'
heat_template_version: '2013-05-23'
outputs:
  KeystoneURL:
    description: URL for the Overcloud Keystone service
    value:
      Fn::Join:
      - ''
      - - http://
        - get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        - :5000/v2.0/
parameters:
  AdminPassword:
    default: unset
    description: The password for the keystone admin account, used for monitoring,
      querying neutron etc.
    hidden: true
    type: string
  AdminToken:
    default: unset
    description: The keystone auth secret.
    hidden: true
    type: string
  BlockStorageImage:
    default: overcloud-cinder-volume
    type: string
  CeilometerComputeAgent:
    constraints:
    - allowed_values:
      - ''
      - Present
    default: ''
    description: Indicates whether the Compute agent is present and expects nova-compute
      to be configured accordingly
    type: string
  CeilometerMeteringSecret:
    default: unset
    description: Secret shared by the ceilometer services.
    hidden: true
    type: string
  CeilometerPassword:
    default: unset
    description: The password for the ceilometer service account.
    hidden: true
    type: string
  CinderISCSIHelper:
    default: tgtadm
    description: The iSCSI helper to use with cinder.
    type: string
  CinderLVMLoopDeviceSize:
    default: 5000
    description: The size of the loopback file used by the cinder LVM driver.
    type: number
  CinderPassword:
    default: unset
    description: The password for the cinder service account, used by cinder-api.
    hidden: true
    type: string
  CloudName:
    default: ''
    description: The DNS name of this cloud. E.g. ci-overcloud.tripleo.org
    type: string
  ControlFixedIPs:
    default: []
    description: Should be used for arbitrary ips.
    type: json
  ControlVirtualInterface:
    default: br-ex
    description: Interface where virtual ip will be assigned.
    type: string
  Debug:
    default: ''
    description: Set to True to enable debugging on all services.
    type: string
  DefaultSignalTransport:
    constraints:
    - allowed_values:
      - CFN_SIGNAL
      - HEAT_SIGNAL
      - NO_SIGNAL
    default: CFN_SIGNAL
    description: Transport to use for software-config signals.
    type: string
  ExtraConfig:
    default: {}
    description: "Additional configuration to inject into the cluster. The JSON should\
      \ have\nthe following structure:\n  {\"FILEKEY\":\n    {\"config\":\n      [{\"\
      section\": \"SECTIONNAME\",\n        \"values\":\n          [{\"option\": \"\
      OPTIONNAME\",\n            \"value\": \"VALUENAME\"\n           }\n        \
      \  ]\n       }\n      ]\n    }\n  }\nFor instance:\n  {\"nova\":\n    {\"config\"\
      :\n      [{\"section\": \"default\",\n        \"values\":\n          [{\"option\"\
      : \"force_config_drive\",\n            \"value\": \"always\"\n           }\n\
      \          ]\n       },\n       {\"section\": \"cells\",\n        \"values\"\
      :\n          [{\"option\": \"driver\",\n            \"value\": \"nova.cells.rpc_driver.CellsRPCDriver\"\
      \n           }\n          ]\n       }\n      ]\n    }\n  }\n"
    type: json
  GlanceLogFile:
    default: ''
    description: The filepath of the file to use for logging messages from Glance.
    type: string
  GlanceNotifierStrategy:
    default: noop
    description: Strategy to use for Glance notification queue
    type: string
  GlancePassword:
    default: unset
    description: The password for the glance service account, used by the glance services.
    hidden: true
    type: string
  GlancePort:
    default: 9292
    description: Glance port.
    type: string
  GlanceProtocol:
    default: http
    description: Protocol to use when connecting to glance, set to https for SSL.
    type: string
  HeatPassword:
    default: unset
    description: The password for the Heat service account, used by the Heat services.
    hidden: true
    type: string
  HeatStackDomainAdminPassword:
    default: ''
    description: Password for heat_domain_admin user.
    hidden: true
    type: string
  HypervisorNeutronPhysicalBridge:
    default: br-ex
    description: 'An OVS bridge to create on each hypervisor. This defaults to br-ex
      the same as the control plane nodes, as we have a uniform configuration of the
      openvswitch agent. Typically should not need to be changed.

      '
    type: string
  HypervisorNeutronPublicInterface:
    default: eth0
    description: What interface to add to the HypervisorNeutronPhysicalBridge.
    type: string
  ImageUpdatePolicy:
    default: REBUILD_PRESERVE_EPHEMERAL
    description: What policy to use when reconstructing instances. REBUILD for rebuilds,
      REBUILD_PRESERVE_EPHEMERAL to preserve /mnt.
    type: string
  KeyName:
    default: default
    description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    type: string
  KeystoneCACertificate:
    default: ''
    description: Keystone self-signed certificate authority certificate.
    type: string
  KeystoneSigningCertificate:
    default: ''
    description: Keystone certificate for verifying token validity.
    type: string
  KeystoneSigningKey:
    default: ''
    description: Keystone key for signing tokens.
    hidden: true
    type: string
  LiveUpdateComputeImage:
    default: ''
    description: The image ID for live-updates to the overcloud compute nodes.
    type: string
  LiveUpdateHost:
    default: ''
    description: The IP address for the undercloud Glance API.
    type: string
  LiveUpdatePassword:
    default: ''
    description: The live-update password for the undercloud Glance API.
    hidden: true
    type: string
  LiveUpdateTenantName:
    default: ''
    description: The live-update tenant name for the undercloud Glance API.
    type: string
  LiveUpdateUserName:
    default: ''
    description: The live-update username for the undercloud Glance API.
    type: string
  MysqlInnodbBufferPoolSize:
    default: 0
    description: 'Specifies the size of the buffer pool in megabytes. Setting to zero
      should be interpreted as "no value" and will defer to the lower level default.

      '
    type: number
  NeutronBridgeMappings:
    default: datacentre:br-ex
    description: 'The OVS logical->physical bridge mappings to use. See the Neutron
      documentation for details. Defaults to mapping br-ex - the external bridge on
      hosts - to a physical name ''datacentre'' which can be used to create provider
      networks (and we use this for the default floating network) - if changing this
      either use different post-install network scripts or be sure to keep ''datacentre''
      as a mapping network name.

      '
    type: string
  NeutronControlPlaneID:
    default: ''
    description: Neutron ID for ctlplane network.
    type: string
  NeutronDnsmasqOptions:
    default: dhcp-option-force=26,1400
    description: Dnsmasq options for neutron-dhcp-agent. The default value here forces
      MTU to be set to 1400 to account for the gre tunnel overhead.
    type: string
  NeutronFlatNetworks:
    default: datacentre
    description: 'If set, flat networks to configure in neutron plugins. Defaults
      to ''datacentre'' to permit external network creation.

      '
    type: string
  NeutronNetworkVLANRanges:
    default: datacentre
    description: 'The Neutron ML2 and OpenVSwitch vlan mapping range to support. See
      the Neutron documentation for permitted values. Defaults to permitting any VLAN
      on the ''datacentre'' physical network (See NeutronBridgeMappings).

      '
    type: string
  NeutronPassword:
    default: unset
    description: The password for the neutron service account, used by neutron agents.
    hidden: true
    type: string
  NeutronPublicInterface:
    default: eth0
    description: What interface to bridge onto br-ex for network nodes.
    type: string
  NeutronPublicInterfaceDefaultRoute:
    default: ''
    description: A custom default route for the NeutronPublicInterface.
    type: string
  NeutronPublicInterfaceIP:
    default: ''
    description: A custom IP address to put onto the NeutronPublicInterface.
    type: string
  NeutronPublicInterfaceRawDevice:
    default: ''
    description: If set, the public interface is a vlan with this device as the raw
      device.
    type: string
  NeutronPublicInterfaceTag:
    default: ''
    description: 'VLAN tag for creating a public VLAN. The tag will be used to create
      an access port on the exterior bridge for each control plane node, and that
      port will be given the IP address returned by neutron from the public network.
      Set CONTROLEXTRA=overcloud-vlan-port.yaml when compiling overcloud.yaml to include
      the deployment of VLAN ports to the control plane.

      '
    type: string
  NovaComputeDriver:
    default: libvirt.LibvirtDriver
    type: string
  NovaComputeExtraConfig:
    default: {}
    description: 'NovaCompute specific configuration to inject into the cluster. Same

      structure as ExtraConfig.

      '
    type: json
  NovaComputeLibvirtType:
    default: ''
    type: string
  NovaImage:
    default: overcloud-compute
    type: string
  NovaPassword:
    default: unset
    description: The password for the nova service account, used by nova-api.
    hidden: true
    type: string
  NtpServer:
    default: ''
    type: string
  OvercloudBlockStorageFlavor:
    default: baremetal
    description: Flavor for block storage nodes to request when deploying.
    type: string
  OvercloudComputeFlavor:
    default: baremetal
    description: Flavor for compute nodes to request when deploying.
    type: string
  OvercloudControlFlavor:
    default: baremetal
    description: Flavor for control nodes to request when deploying.
    type: string
  OvercloudSwiftStorageFlavor:
    default: baremetal
    description: Flavor for Swift storage nodes to request when deploying.
    type: string
  PublicVirtualFixedIPs:
    default: []
    description: 'Control the IP allocation for the PublicVirtualInterface port. E.g.
      [{''ip_address'':''1.2.3.4''}]

      '
    type: json
  PublicVirtualInterface:
    default: br-ex
    description: 'Specifies the interface where the public-facing virtual ip will
      be assigned. This should be int_public when a VLAN is being used.

      '
    type: string
  PublicVirtualNetwork:
    default: ctlplane
    description: 'Neutron network to allocate public virtual IP port on.

      '
    type: string
  RabbitCookieSalt:
    default: unset
    description: Salt for the rabbit cookie, change this to force the randomly generated
      rabbit cookie to change.
    type: string
  RabbitPassword:
    default: guest
    description: The password for RabbitMQ
    hidden: true
    type: string
  RabbitUserName:
    default: guest
    description: The username for RabbitMQ
    type: string
  SSLCACertificate:
    default: ''
    description: If set, the contents of an SSL certificate authority file.
    type: string
  SSLCertificate:
    default: ''
    description: If set, the contents of an SSL certificate .crt file for encrypting
      SSL endpoints.
    hidden: true
    type: string
  SSLKey:
    default: ''
    description: If set, the contents of an SSL certificate .key file for encrypting
      SSL endpoints.
    hidden: true
    type: string
  SnmpdReadonlyUserName:
    default: ro_snmp_user
    description: The user name for SNMPd with readonly rights running on all Overcloud
      nodes
    type: string
  SnmpdReadonlyUserPassword:
    default: unset
    description: The user password for SNMPd with readonly rights running on all Overcloud
      nodes
    hidden: true
    type: string
  SwiftHashSuffix:
    default: unset
    description: A random string to be used as a salt when hashing to determine mappings
      in the ring.
    hidden: true
    type: string
  SwiftPassword:
    default: unset
    description: The password for the swift service account, used by the swift proxy
      services.
    hidden: true
    type: string
  SwiftReplicas:
    default: 1
    description: How many replicas to use in the swift rings.
    type: number
  SwiftStorageImage:
    default: overcloud-swift-storage
    type: string
  controllerExtraConfig:
    default: {}
    description: 'Controller specific configuration to inject into the cluster. Same

      structure as ExtraConfig.

      '
    type: json
  controllerImage:
    default: overcloud-control
    type: string
resources:
  BlockStorageConfig:
    properties:
      config:
        admin-password:
          get_param: AdminPassword
        cinder:
          db:
            get_input: cinder_dsn
          iscsi-helper:
            get_param: CinderISCSIHelper
          service-password:
            get_param: CinderPassword
          volume_size_mb:
            get_param: CinderLVMLoopDeviceSize
        glance:
          host:
            get_input: controller_virtual_ip
          port:
            get_param: GlancePort
        keystone:
          host:
            get_input: controller_virtual_ip
        rabbit:
          host:
            get_input: controller_virtual_ip
          password:
            get_param: RabbitPassword
          username:
            get_param: RabbitUserName
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  ControlVirtualIP:
    properties:
      fixed_ips:
        get_param: ControlFixedIPs
      name: control_virtual_ip
      network_id:
        get_param: NeutronControlPlaneID
    type: OS::Neutron::Port
  MysqlClusterUniquePart:
    properties:
      length: 10
    type: OS::Heat::RandomString
  MysqlRootPassword:
    properties:
      length: 10
    type: OS::Heat::RandomString
  NovaCompute0:
    properties:
      flavor:
        get_param: OvercloudComputeFlavor
      image:
        get_param: NovaImage
      image_update_policy:
        get_param: ImageUpdatePolicy
      key_name:
        get_param: KeyName
      networks:
      - network: ctlplane
      user_data_format: SOFTWARE_CONFIG
    type: OS::Nova::Server
  NovaCompute0AllNodesDeployment:
    depends_on:
    - NovaCompute0Passthrough
    properties:
      config:
        get_resource: allNodesConfig
      server:
        get_resource: NovaCompute0
      signal_transport:
        get_param: DefaultSignalTransport
    type: OS::Heat::StructuredDeployment
  NovaCompute0Deployment:
    depends_on:
    - controller0AllNodesDeployment
    properties:
      config:
        get_resource: NovaComputeConfig
      input_values:
        admin_password:
          get_param: AdminPassword
        ceilometer_compute_agent:
          get_param: CeilometerComputeAgent
        ceilometer_dsn:
          Fn::Join:
          - ''
          - - mysql://ceilometer:unset@
            - get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
            - /ceilometer
        ceilometer_metering_secret:
          get_param: CeilometerMeteringSecret
        ceilometer_password:
          get_param: CeilometerPassword
        glance_host:
          get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        glance_port:
          get_param: GlancePort
        glance_protocol:
          get_param: GlanceProtocol
        keystone_host:
          get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        live_update_host:
          get_param: LiveUpdateHost
        live_update_image_id:
          get_param: LiveUpdateComputeImage
        live_update_password:
          get_param: LiveUpdatePassword
        live_update_tenant_name:
          get_param: LiveUpdateTenantName
        live_update_username:
          get_param: LiveUpdateUserName
        neutron_bridge_mappings:
          get_param: NeutronBridgeMappings
        neutron_dsn:
          Fn::Join:
          - ''
          - - mysql://neutron:unset@
            - get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
            - /ovs_neutron
        neutron_enable_tunneling: 'True'
        neutron_flat_networks:
          get_param: NeutronFlatNetworks
        neutron_host:
          get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        neutron_local_ip:
          get_attr:
          - NovaCompute0
          - networks
          - ctlplane
          - 0
        neutron_network_vlan_ranges:
          get_param: NeutronNetworkVLANRanges
        neutron_password:
          get_param: NeutronPassword
        neutron_physical_bridge:
          get_param: HypervisorNeutronPhysicalBridge
        neutron_public_interface:
          get_param: HypervisorNeutronPublicInterface
        neutron_tenant_network_type: gre
        nova_api_host:
          get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        nova_compute_driver:
          get_param: NovaComputeDriver
        nova_compute_libvirt_type:
          get_param: NovaComputeLibvirtType
        nova_dsn:
          Fn::Join:
          - ''
          - - mysql://nova:unset@
            - get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
            - /nova
        nova_image:
          get_param: NovaImage
        nova_password:
          get_param: NovaPassword
        nova_public_ip:
          get_attr:
          - PublicVirtualIP
          - fixed_ips
          - 0
          - ip_address
        ntp_server:
          get_param: NtpServer
        rabbit_host:
          get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        rabbit_password:
          get_param: RabbitPassword
        rabbit_username:
          get_param: RabbitUserName
        snmpd_readonly_user_name:
          get_param: SnmpdReadonlyUserName
        snmpd_readonly_user_password:
          get_param: SnmpdReadonlyUserPassword
      server:
        get_resource: NovaCompute0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  NovaCompute0Passthrough:
    depends_on:
    - NovaCompute0Deployment
    properties:
      config:
        get_resource: NovaComputePassthrough
      input_values:
        passthrough_config:
          get_param: ExtraConfig
      server:
        get_resource: NovaCompute0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  NovaCompute0PassthroughSpecific:
    depends_on:
    - NovaCompute0Passthrough
    properties:
      config:
        get_resource: NovaComputePassthroughSpecific
      input_values:
        passthrough_config_specific:
          get_param: NovaComputeExtraConfig
      server:
        get_resource: NovaCompute0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  NovaComputeConfig:
    properties:
      config:
        admin-password:
          get_input: admin_password
        ceilometer:
          compute_agent:
            get_input: ceilometer_compute_agent
          db:
            get_input: ceilometer_dsn
          debug:
            get_param: Debug
          metering_secret:
            get_input: ceilometer_metering_secret
          service-password:
            get_input: ceilometer_password
        completion-signal:
          get_input: deploy_signal_id
        glance:
          debug:
            get_param: Debug
          host:
            get_input: glance_host
          port:
            get_input: glance_port
          protocol:
            get_input: glance_protocol
        keystone:
          debug:
            get_param: Debug
          host:
            get_input: keystone_host
        live-update:
          base_image_id:
            get_input: nova_image
          host:
            get_input: live_update_host
          live_update_image_id:
            get_input: live_update_compute_image
          password:
            get_input: live_update_password
          tenant-name:
            get_input: live_update_tenant_name
          username:
            get_input: live_update_username
        neutron:
          debug:
            get_param: Debug
          flat-networks:
            get_input: neutron_flat_networks
          host:
            get_input: neutron_host
          ovs:
            bridge_mappings:
              get_input: neutron_bridge_mappings
            enable_tunneling:
              get_input: neutron_enable_tunneling
            local_ip:
              get_input: neutron_local_ip
            network_vlan_ranges:
              get_input: neutron_network_vlan_ranges
            physical_bridge:
              get_input: neutron_physical_bridge
            public_interface:
              get_input: neutron_public_interface
            tenant_network_type:
              get_input: neutron_tenant_network_type
          ovs_db:
            get_input: neutron_dsn
          service-password:
            get_input: neutron_password
        nova:
          compute_driver:
            get_input: nova_compute_driver
          compute_libvirt_type:
            get_input: nova_compute_libvirt_type
          db:
            get_input: nova_dsn
          debug:
            get_param: Debug
          host:
            get_input: nova_api_host
          public_ip:
            get_input: nova_public_ip
          service-password:
            get_input: nova_password
        ntp:
          servers:
          - fudge: stratum 0
            server:
              get_input: ntp_server
        rabbit:
          host:
            get_input: rabbit_host
          password:
            get_input: rabbit_password
          username:
            get_input: rabbit_username
        snmpd:
          export_MIB: UCD-SNMP-MIB
          readonly_user_name:
            get_input: snmpd_readonly_user_name
          readonly_user_password:
            get_input: snmpd_readonly_user_password
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  NovaComputePassthrough:
    properties:
      config:
        get_input: passthrough_config
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  NovaComputePassthroughSpecific:
    properties:
      config:
        get_input: passthrough_config_specific
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  PublicVirtualIP:
    properties:
      fixed_ips:
        get_param: PublicVirtualFixedIPs
      name: public_virtual_ip
      network:
        get_param: PublicVirtualNetwork
    type: OS::Neutron::Port
  RabbitCookie:
    properties:
      length: 20
      salt:
        get_param: RabbitCookieSalt
    type: OS::Heat::RandomString
  SSLConfig:
    properties:
      config:
        ssl:
          ca_certificate:
            get_input: ssl_ca_certificate
        stunnel:
          cacert:
            get_input: ssl_ca_certificate
          cert:
            get_input: ssl_certificate
          key:
            get_input: ssl_key
          ports:
          - accept: 13773
            connect: 8773
            connect_host:
              get_input: controller_host
            name: ec2
          - accept: 13292
            connect: 9292
            connect_host:
              get_input: controller_host
            name: image
          - accept: 13000
            connect: 5000
            connect_host:
              get_input: controller_host
            name: identity
          - accept: 13696
            connect: 9696
            connect_host:
              get_input: controller_host
            name: network
          - accept: 13774
            connect: 8774
            connect_host:
              get_input: controller_host
            name: compute
          - accept: 13080
            connect: 8080
            connect_host:
              get_input: controller_host
            name: swift-proxy
          - accept: 13776
            connect: 8776
            connect_host:
              get_input: controller_host
            name: cinder
          - accept: 13777
            connect: 8777
            connect_host:
              get_input: controller_host
            name: ceilometer
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  SwiftConfig:
    properties:
      config:
        swift:
          devices:
            get_input: swift_devices
          hash:
            get_input: swift_hash_suffix
          part-power: 10
          proxy-memcache:
            get_input: swift_proxy_memcache
          replicas:
            get_input: swift_replicas
          service-password:
            get_input: swift_password
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  SwiftKeystoneConfig:
    properties:
      config:
        keystone:
          host:
            get_input: keystone_host
    type: OS::Heat::StructuredConfig
  allNodesConfig:
    properties:
      config:
        completion-signal:
          get_input: deploy_signal_id
        hosts:
          Fn::Join:
          - '

            '
          - - Fn::Join:
              - '

                '
              - - Fn::Join:
                  - ' '
                  - - get_attr:
                      - NovaCompute0
                      - networks
                      - ctlplane
                      - 0
                    - get_attr:
                      - NovaCompute0
                      - show
                      - name
                    - Fn::Join:
                      - .
                      - - get_attr:
                          - NovaCompute0
                          - show
                          - name
                        - novalocal
            - Fn::Join:
              - '

                '
              - []
            - Fn::Join:
              - '

                '
              - []
            - Fn::Join:
              - '

                '
              - - Fn::Join:
                  - ' '
                  - - get_attr:
                      - controller0
                      - networks
                      - ctlplane
                      - 0
                    - get_attr:
                      - controller0
                      - show
                      - name
                    - Fn::Join:
                      - .
                      - - get_attr:
                          - controller0
                          - show
                          - name
                        - novalocal
                    - get_param: CloudName
        rabbit:
          nodes:
            Fn::Join:
            - ','
            - - get_attr:
                - controller0
                - show
                - name
    type: OS::Heat::StructuredConfig
  controller0:
    properties:
      flavor:
        get_param: OvercloudControlFlavor
      image:
        get_param: controllerImage
      image_update_policy:
        get_param: ImageUpdatePolicy
      key_name:
        get_param: KeyName
      networks:
      - network: ctlplane
      user_data_format: SOFTWARE_CONFIG
    type: OS::Nova::Server
  controller0AllNodesDeployment:
    depends_on:
    - controller0Deployment
    - controller0SSLDeployment
    - controller0Swift
    - controller0PassthroughSpecific
    properties:
      config:
        get_resource: allNodesConfig
      server:
        get_resource: controller0
      signal_transport:
        get_param: DefaultSignalTransport
    type: OS::Heat::StructuredDeployment
  controller0Deployment:
    properties:
      config:
        get_resource: controllerConfig
      input_values:
        bootstack_nodeid:
          get_attr:
          - controller0
          - show
          - name
        controller_host:
          get_attr:
          - controller0
          - networks
          - ctlplane
          - 0
        controller_virtual_ip:
          get_attr:
          - ControlVirtualIP
          - fixed_ips
          - 0
          - ip_address
        heat.metadata_server_url:
          Fn::Join:
          - ''
          - - http://
            - get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
            - :8000
        heat.waitcondition_server_url:
          Fn::Join:
          - ''
          - - http://
            - get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
            - :8000/v1/waitcondition
        heat.watch_server_url:
          Fn::Join:
          - ''
          - - http://
            - get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
            - :8003
      server:
        get_resource: controller0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  controller0Passthrough:
    properties:
      config:
        get_resource: controllerPassthrough
      input_values:
        passthrough_config:
          get_param: ExtraConfig
      server:
        get_resource: controller0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  controller0PassthroughSpecific:
    depends_on:
    - controller0Passthrough
    properties:
      config:
        get_resource: controllerPassthroughSpecific
      input_values:
        passthrough_config_specific:
          get_param: controllerExtraConfig
      server:
        get_resource: controller0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  controller0SSLDeployment:
    properties:
      config:
        get_resource: SSLConfig
      input_values:
        controller_host:
          get_attr:
          - controller0
          - networks
          - ctlplane
          - 0
        ssl_ca_certificate:
          get_param: SSLCACertificate
        ssl_certificate:
          get_param: SSLCertificate
        ssl_key:
          get_param: SSLKey
      server:
        get_resource: controller0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  controller0Swift:
    properties:
      config:
        get_resource: SwiftConfig
      input_values:
        swift_devices:
          Fn::Join:
          - ', '
          - - Fn::Join:
              - ''
              - - r1z1-
                - get_attr:
                  - controller0
                  - networks
                  - ctlplane
                  - 0
                - :%PORT%/d1
        swift_hash_suffix:
          get_param: SwiftHashSuffix
        swift_password:
          get_param: SwiftPassword
        swift_proxy_memcache:
          Fn::Join:
          - ','
          - - Fn::Join:
              - ', '
              - - Fn::Join:
                  - ''
                  - - get_attr:
                      - controller0
                      - networks
                      - ctlplane
                      - 0
                    - :11211
        swift_replicas:
          get_param: SwiftReplicas
      server:
        get_resource: controller0
      signal_transport: NO_SIGNAL
    type: OS::Heat::StructuredDeployment
  controllerConfig:
    properties:
      config:
        admin-password:
          get_param: AdminPassword
        admin-token:
          get_param: AdminToken
        bootstack:
          public_interface_ip:
            get_param: NeutronPublicInterfaceIP
        bootstrap_host:
          bootstrap_nodeid:
            Fn::Select:
            - 0
            - Fn::Select:
              - 0
              - - - Fn::Select:
                    - name
                    - get_attr:
                      - controller0
                      - show
          nodeid:
            get_input: bootstack_nodeid
        ceilometer:
          db:
            Fn::Join:
            - ''
            - - mysql://ceilometer:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /ceilometer
          debug:
            get_param: Debug
          metering_secret:
            get_param: CeilometerMeteringSecret
          service-password:
            get_param: CeilometerPassword
        cinder:
          db:
            Fn::Join:
            - ''
            - - mysql://cinder:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /cinder
          debug:
            get_param: Debug
          iscsi-helper:
            get_param: CinderISCSIHelper
          service-password:
            get_param: CinderPassword
          volume_size_mb:
            get_param: CinderLVMLoopDeviceSize
        controller-address:
          get_input: controller_host
        corosync:
          bindnetaddr:
            get_input: controller_host
          mcastport: 5577
          nodes:
          - ip:
              get_attr:
              - controller0
              - networks
              - ctlplane
              - 0
        database:
          host:
            get_attr:
            - ControlVirtualIP
            - fixed_ips
            - 0
            - ip_address
        db-password: unset
        glance:
          backend: swift
          db:
            Fn::Join:
            - ''
            - - mysql://glance:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /glance
          debug:
            get_param: Debug
          host:
            get_input: controller_virtual_ip
          log-file:
            get_param: GlanceLogFile
          notifier-strategy:
            get_param: GlanceNotifierStrategy
          port:
            get_param: GlancePort
          protocol:
            get_param: GlanceProtocol
          registry:
            host:
              get_input: controller_virtual_ip
          service-password:
            get_param: GlancePassword
          swift-store-key:
            get_param: GlancePassword
          swift-store-user: service:glance
        haproxy:
          net_binds:
          - ip:
              get_attr:
              - ControlVirtualIP
              - fixed_ips
              - 0
              - ip_address
          nodes:
          - ip:
              get_attr:
              - controller0
              - networks
              - ctlplane
              - 0
            name:
              get_attr:
              - controller0
              - show
              - name
          services:
          - name: keystone_admin
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 35357
          - name: keystone_public
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 5000
          - name: horizon
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 80
          - name: neutron
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 9696
          - name: cinder
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8776
          - name: glance_api
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 9292
          - name: glance_registry
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 9191
          - name: heat_api
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8004
          - name: heat_cloudwatch
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8003
          - name: heat_cfn
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8000
          - extra_server_params:
            - backup
            name: mysql
            options:
            - timeout client 0
            - timeout server 0
            port: 3306
          - name: nova_ec2
            port: 8773
          - name: nova_osapi
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8774
          - name: nova_metadata
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8775
          - name: ceilometer
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8777
          - name: swift_proxy_server
            net_binds:
            - ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            - ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            port: 8080
          - name: rabbitmq
            options:
            - timeout client 0
            - timeout server 0
            port: 5672
        heat:
          admin_password:
            get_param: HeatPassword
          admin_tenant_name: service
          admin_user: heat
          auth_encryption_key: unset___________
          db:
            Fn::Join:
            - ''
            - - mysql://heat:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /heat
          debug:
            get_param: Debug
          metadata_server_url:
            get_input: heat.metadata_server_url
          stack_domain_admin_password:
            get_param: HeatStackDomainAdminPassword
          waitcondition_server_url:
            get_input: heat.waitcondition_server_url
          watch_server_url:
            get_input: heat.watch_server_url
        horizon:
          caches:
            memcached:
              nodes:
              - get_attr:
                - controller0
                - show
                - name
        keepalived:
          keepalive_interface:
            get_param: PublicVirtualInterface
          priority: 101
        keystone:
          ca_certificate:
            get_param: KeystoneCACertificate
          db:
            Fn::Join:
            - ''
            - - mysql://keystone:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /keystone
          debug:
            get_param: Debug
          host:
            get_input: controller_virtual_ip
          signing_certificate:
            get_param: KeystoneSigningCertificate
          signing_key:
            get_param: KeystoneSigningKey
        mysql:
          cluster_name:
            Fn::Join:
            - '-'
            - - tripleo
              - get_resource: MysqlClusterUniquePart
          innodb_buffer_pool_size:
            get_param: MysqlInnodbBufferPoolSize
          local_bind: true
          nodes:
          - ip:
              get_attr:
              - controller0
              - networks
              - ctlplane
              - 0
          root-password:
            get_resource: MysqlRootPassword
        neutron:
          debug:
            get_param: Debug
          dnsmasq-options:
            get_param: NeutronDnsmasqOptions
          flat-networks:
            get_param: NeutronFlatNetworks
          host:
            get_input: controller_virtual_ip
          metadata_proxy_shared_secret: unset
          ovs:
            bridge_mappings:
              get_param: NeutronBridgeMappings
            enable_tunneling: 'True'
            local_ip:
              get_input: controller_host
            network_vlan_ranges:
              get_param: NeutronNetworkVLANRanges
            physical_bridge: br-ex
            public_interface:
              get_param: NeutronPublicInterface
            public_interface_raw_device:
              get_param: NeutronPublicInterfaceRawDevice
            public_interface_route:
              get_param: NeutronPublicInterfaceDefaultRoute
            public_interface_tag:
              get_param: NeutronPublicInterfaceTag
            tenant_network_type: gre
          ovs_db:
            Fn::Join:
            - ''
            - - mysql://neutron:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /ovs_neutron?charset=utf8
          service-password:
            get_param: NeutronPassword
        nova:
          compute_driver: libvirt.LibvirtDriver
          db:
            Fn::Join:
            - ''
            - - mysql://nova:unset@
              - get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
              - /nova
          default_floating_pool: ext-net
          host:
            get_input: controller_virtual_ip
          metadata-proxy: true
          service-password:
            get_param: NovaPassword
        ntp:
          servers:
          - fudge: stratum 0
            server:
              get_param: NtpServer
        pacemaker:
          quorum_policy: ignore
          recheck_interval: 5
          stonith_enabled: false
        rabbit:
          cookie:
            get_attr:
            - RabbitCookie
            - value
          host:
            get_input: controller_virtual_ip
          password:
            get_param: RabbitPassword
          username:
            get_param: RabbitUserName
        snmpd:
          export_MIB: UCD-SNMP-MIB
          readonly_user_name:
            get_param: SnmpdReadonlyUserName
          readonly_user_password:
            get_param: SnmpdReadonlyUserPassword
        virtual_interfaces:
          instances:
          - keepalive_interface:
              get_param: ControlVirtualInterface
            priority: 101
            virtual_ips:
            - interface:
                get_param: ControlVirtualInterface
              ip:
                get_attr:
                - ControlVirtualIP
                - fixed_ips
                - 0
                - ip_address
            virtual_router_id: 51
            vrrp_instance_name: VI_CONTROL
          - keepalive_interface:
              get_param: PublicVirtualInterface
            priority: 101
            virtual_ips:
            - interface:
                get_param: PublicVirtualInterface
              ip:
                get_attr:
                - PublicVirtualIP
                - fixed_ips
                - 0
                - ip_address
            virtual_router_id: 52
            vrrp_instance_name: VI_PUBLIC
          vrrp_sync_groups:
          - members:
            - VI_CONTROL
            - VI_PUBLIC
            name: VG1
        virtual_ips:
        - interface:
            get_param: ControlVirtualInterface
          ip:
            get_attr:
            - ControlVirtualIP
            - fixed_ips
            - 0
            - ip_address
        - interface:
            get_param: PublicVirtualInterface
          ip:
            get_attr:
            - PublicVirtualIP
            - fixed_ips
            - 0
            - ip_address
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  controllerPassthrough:
    properties:
      config:
        get_input: passthrough_config
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  controllerPassthroughSpecific:
    properties:
      config:
        get_input: passthrough_config_specific
      group: os-apply-config
    type: OS::Heat::StructuredConfig
